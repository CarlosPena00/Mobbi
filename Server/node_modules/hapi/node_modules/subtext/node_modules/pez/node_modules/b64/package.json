{
  "name": "b64",
  "description": "Base64 streaming encoder and decoder",
  "version": "3.0.3",
  "repository": {
    "type": "git",
    "url": "git://github.com/hapijs/b64"
  },
  "main": "lib/index.js",
  "keywords": [
    "buffer",
    "base64",
    "decode",
    "encode",
    "stream"
  ],
  "engines": {
    "node": ">=4.0.0"
  },
  "dependencies": {},
  "devDependencies": {
    "lab": "14.x.x",
    "wreck": "12.x.x"
  },
  "scripts": {
    "test": "lab -a code -t 100 -L",
    "test-cov-html": "lab -a code -r html -o coverage.html"
  },
  "license": "BSD-3-Clause",
  "readme": "Base64 streaming encoder and decoder\n\n[![Build Status](https://secure.travis-ci.org/hapijs/b64.png)](http://travis-ci.org/hapijs/b64)\n\nLead Maintainer - [Wyatt Preul](https://github.com/geek)\n\n\n## Installation\n\n```sh\nnpm install b64 --save\n```\n\n\n## API\n\n### encode(buffer)\n\nBase64 encode the buffer and return it as a new Buffer.\n\n\n### decode(buffer)\n\nBase64 decode the buffer and return the result as a new buffer.\n\n\n### Encoder\n\nTransform stream that base64 encodes each chunk of the stream.\n\nExample:\n\n```js\n'use strict';\n\nconst Fs = require('fs');\nconst B64 = require('b64');\n\nconst stream = Fs.createReadStream(`${__dirname}/package.json`);\nconst encoder = new B64.Encoder();\n\nstream.pipe(encoder).pipe(process.stdout);\n```\n\n\n### Decoder\n\nTransform stream that base64 decodes each chunk of the stream.\n\nExample:\n\n```js\n'use strict';\n\nconst Fs = require('fs');\nconst B64 = require('b64');\n\nconst stream = Fs.createReadStream(`${__dirname}/encodedfile.b64`);\nconst decoder = new B64.Decoder();\n\nstream.pipe(decoder).pipe(process.stdout);\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hapijs/b64/issues"
  },
  "_id": "b64@3.0.3",
  "dist": {
    "shasum": "f6c12d52d14a8af8594b8c64bd40d0735e03acff"
  },
  "_from": "b64@3.x.x",
  "_resolved": "https://registry.npmjs.org/b64/-/b64-3.0.3.tgz"
}
